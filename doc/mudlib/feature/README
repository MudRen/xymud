□ 物件特性

    物件特性的使用方法大部分是经由特定函数，每个物件特性各不相同，因此
这里也没什麽好说的，只是提供几个以後当你要加入新的物件特性时，最好要遵
守的原则：

(1) 简单

    当你发现一个物件特性写下来将是一个 10K 以上的大档案时，想办法缩短
    或拆成两个特性，尽量维持一个特性所提供的功能单纯化。

(2) 记忆体

    请你记得物件特性是被继承的，而继承这个特性的物件将会 copy 一份所有
    宣告在这个特性中的 global variables ，因此如果一个特性中需要用到许
    多具有常数性质的变数( 即，执行过程中不随继承这个特性的物件而变 )，
    试著用 daemon 的形式以节省记忆体，如 ALIAS_D，SKILL_D 等。

(3) 效率

    采用物件特性的一个原因就是避免「深层继承」，虽然 driver 在执行上并
    没有太大的差异，但是对於大部分巫师而言，要了解或除错一个继承得乱七
    八糟的物件是相当困难的，尽量用「一个标准物件加若干个物件特性」的模
    式去定义所有物件。
